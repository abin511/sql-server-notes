/*
摘自：HTTP://WWW.2CTO.COM/DATABASE/201203/122260.HTML
使用MERGE关键字的好处
首先是更加短小精悍的语句，在SQL SERVER 2008之前没有MERGE的时代，
基于源表对目标表进行操作需要分别写好几条INSERT,UPDATE,DELETE。而使用MERGE,仅仅需要使用一条语句就好。

下面我们来看一个例子,首先建立源表和目标表，并插入相关的数据
*/
--创建源表
CREATE TABLE SOURCETABLE (ID INT, [DESC] VARCHAR(50))
--创建目标表
CREATE TABLE TARGETTABLE (ID INT, [DESC] VARCHAR(50))
--为源表插入数据
INSERT INTO DBO.SOURCETABLE(ID,[DESC]) VALUES(1,'描述1') 
INSERT INTO DBO.SOURCETABLE(ID,[DESC]) VALUES(2,'描述2') 
INSERT INTO DBO.SOURCETABLE(ID,[DESC]) VALUES(3,'描述3') 
INSERT INTO DBO.SOURCETABLE(ID,[DESC]) VALUES(4,'描述4') 
--为目标表插入数据
INSERT INTO DBO.TARGETTABLE(ID,[DESC]) VALUES(1,'在源表里存在，将会被更新') 
INSERT INTO DBO.TARGETTABLE(ID,[DESC]) VALUES(2,'在源表里存在，将会被更新') 
INSERT INTO DBO.TARGETTABLE(ID,[DESC]) VALUES(5,'在源表里不存在，将会被删除') 
INSERT INTO DBO.TARGETTABLE(ID,[DESC]) VALUES(6,'在源表里不存在，将会被删除') 

/*下面我们来写一个简单的MERGE语句*/
DECLARE @OUT TABLE([ACTION] VARCHAR(24),IID INT, IDESC VARCHAR(512),DID INT, DDESC VARCHAR(512))--存放输出参数
--MERGE语句,可以使用TOP关键字限制目标表被操作的行,加上了TOP关键字，我们看到只有两行被更新。
MERGE TOP (2) INTO TARGETTABLE AS T
USING SOURCETABLE AS A
ON T.ID=S.ID
WHEN MATCHED --当上面ON后面的T.ID=S.ID时，目标表中的ID为1，2的数据被更新
THEN UPDATE SET T.[DESC]=S.[DESC]
WHEN NOT MATCHED AND S.ID=3 --目标表中没有的ID，并且源表的ID=3，在源表中有，则插入相关数据到目标表
THEN INSERT VALUES(S.ID,S.[DESC])
WHEN NOT MATCHED BY SOURCE --目标表中存在，源表不存在，则删除目标表中的数据
THEN DELETE --MERGE语句通过OUTPUT子句，将刚刚做过变动的数据进行输出
--输出参数--OUTPUT类似于触发器，因此可以使用触发器专有的INSERTED和DELETED表
OUTPUT $ACTION AS [ACTION],INSERTED.ID AS 插入的ID,INSERTED.[DESC] AS 插入的DESC,
DELETED.ID AS 删除的ID,DELETED.[DESC] AS 删除的DESC INTO @OUT