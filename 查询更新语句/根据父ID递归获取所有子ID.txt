CREATE TABLE INFO   
(   
  ID int,   
  PID int,   
  [NAME] VARCHAR(20)   
)   
INSERT INTO INFO SELECT 1,0,'山东省'   
UNION ALL SELECT 2,1,'烟台市'   
UNION ALL SELECT 4,2,'招远市'   
UNION ALL SELECT 3,1,'青岛市'   
UNION ALL SELECT 5,0,'四会市'   
UNION ALL SELECT 6,5,'清远市'   
UNION ALL SELECT 7,6,'小分市'   
  
CREATE FUNCTION FUN_GETCHILDREN(@PID INT)   
	RETURNS @TB_CHILDRENIDS TABLE(ID INT,[LEVEL] INT) 
AS   
BEGIN   
	DECLARE @LEVEL INT   
	SET @LEVEL=0  
	INSERT INTO @TB_CHILDRENIDS SELECT @PID,@LEVEL   
	WHILE @@ROWCOUNT > 0 BEGIN   
		SET @LEVEL = @LEVEL + 1 
		INSERT INTO @TB_CHILDRENIDS SELECT I.ID,@LEVEL 
		FROM INFO I,@TB_CHILDRENIDS TB WHERE I.PID = TB.ID AND [LEVEL] = @LEVEL - 1   
	END   
	RETURN   
END    
--查询语句
SELECT I.* FROM INFO I,DBO.FUN_GETCHILDREN(2) F WHERE I.ID=F.ID 
DROP TABLE INFO
DROP FUNCTION FUN_GETCHILDREN
  
ID   PID  Name   
---- ---- --------------------   
002  001  烟台市   
004  002  招远市   

/***********************************************************************/
/*
根据父类ID查询
EXEC MS_P_GT_BIGCLASS 8,0
*/
ALTER PROCEDURE MS_P_GT_BIGCLASS
@PID INT = 0,		--父节点ID
@ALLCHILDREN BIT	--是否获取所有的子节点
AS
IF @ALLCHILDREN = 0 BEGIN
	SELECT * FROM MS_T_BIGCLASS WITH(NOLOCK) WHERE PID = @PID
END ELSE BEGIN
	DECLARE @TAB TABLE([PID] INT,[LEVEL] int)
	DECLARE @LEVEL INT  SET @LEVEL = 0  
	INSERT INTO @TAB SELECT @PID,@LEVEL   
	WHILE @@ROWCOUNT > 0
	 BEGIN
		IF @PID > 0 BEGIN
		   SET @LEVEL = @LEVEL + 1 
		   INSERT INTO @TAB 
		   SELECT A.ID,@LEVEL FROM MS_T_BIGCLASS A JOIN @TAB B 
		   ON A.PID = B.PID WHERE [LEVEL] = @LEVEL - 1
		END ELSE BEGIN
			INSERT INTO @TAB SELECT [ID],0 FROM MS_T_BIGCLASS WHERE [PID] = 0
			BREAK
		END
	 END
	 SELECT A.* FROM MS_T_BIGCLASS AS A WITH(NOLOCK) JOIN @TAB B ON A.ID = B.PID
END


/**********************************************************************/
--CTE实现递归
WITH cte AS (
	SELECT * FROM REGIONINFO AS A(NOLOCK) WHERE A.id = 2
	UNION ALL
	SELECT A.* FROM REGIONINFO AS A(NOLOCK), cte AS B
	WHERE A.pid = B.id
)SELECT * FROM cte 
